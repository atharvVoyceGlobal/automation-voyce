version: 2.1

executors:
  python-executor:
    docker:
      - image: cimg/python:3.11-browsers
    working_directory: ~/project

jobs:
  install-dependencies:
    executor: python-executor
    steps:
      - checkout
      - run:
          name: Install Chrome and Chromedriver
          command: |
            sudo apt-get update && sudo apt-get install -y wget curl gnupg unzip libnss3 libxss1 libgconf-2-4 libasound2
            wget -O chrome-linux64.zip https://storage.googleapis.com/chrome-for-testing-public/131.0.6778.108/linux64/chrome-linux64.zip
            unzip chrome-linux64.zip -d /usr/local/bin/
            sudo chmod -R +x /usr/local/bin/chrome-linux64/
            rm chrome-linux64.zip
            wget -O chromedriver-linux64.zip https://storage.googleapis.com/chrome-for-testing-public/131.0.6778.108/linux64/chromedriver-linux64.zip
            unzip chromedriver-linux64.zip -d /usr/local/bin/
            sudo mv /usr/local/bin/chromedriver-linux64/chromedriver /usr/local/bin/chromedriver
            sudo chmod +x /usr/local/bin/chromedriver
            rm -rf chromedriver-linux64.zip /usr/local/bin/chromedriver-linux64/
      - run:
          name: Create Virtual Environment
          command: |
            echo "Создаём виртуальную среду..."
            python -m venv venv || echo "Ошибка при создании виртуальной среды"
            ls -l
      - run:
          name: Install Python Dependencies
          command: |
            . venv/bin/activate
            python -m pip install --upgrade pip
            pip install -r requirements.txt
      - save_cache:
          key: v1-venv-cache-{{ checksum "requirements.txt" }}
          paths:
            - venv

  run-tests:
    executor: python-executor
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-venv-cache-{{ checksum "requirements.txt" }}
      - run:
          name: Debug Virtual Environment
          command: |
            echo "Отладка виртуальной среды..."
            ls -l
            ls -l venv || echo "Директория venv не найдена"
            . venv/bin/activate || echo "Ошибка активации виртуальной среды"
      - run:
          name: Run API Tests
          command: |
            . venv/bin/activate
            mkdir -p test_results
            python -m pytest --alluredir=test_results/ --capture=tee-sys -v
      - store_test_results:
          path: test_results
      - store_artifacts:
          path: test_results

workflows:
  version: 2
  test-and-build:
    jobs:
      - install-dependencies
      - run-tests:
          requires:
            - install-dependencies
