version: 2.1

executors:
  macos-executor:
    macos:
      xcode: "14.0.0"  # Версия Xcode (указывается для выбора образа macOS)
    working_directory: ~/project
    resource_class: macos.medium  # Используйте нужный класс ресурсов

jobs:
  install-dependencies:
    executor: macos-executor
    steps:
      - checkout
      - run:
          name: Install Python 3.11
          command: |
            brew update
            brew install python@3.11
            echo "Python 3.11 Installed: $(python3.11 --version)"
      - run:
          name: Create Virtual Environment
          command: |
            python3.11 -m venv venv
            echo "Virtual environment created."
      - run:
          name: Install Python Dependencies
          command: |
            . venv/bin/activate
            python -m pip install --upgrade pip
            pip install -r requirements.txt
      - run:
          name: Create Logs Directory
          command: |
            mkdir -p logs
            echo "Logs directory created: $(ls -ld logs)"
      - save_cache:
          key: v1-venv-cache-{{ checksum "requirements.txt" }}
          paths:
            - venv

  run-tests:
    executor: macos-executor
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-venv-cache-{{ checksum "requirements.txt" }}
      - run:
          name: Debug Virtual Environment
          command: |
            echo "Debugging virtual environment..."
            ls -l
            ls -l venv || echo "venv directory not found"
            . venv/bin/activate || echo "Error activating virtual environment"
      - run:
          name: Ensure Logs Directory Exists
          command: |
            mkdir -p logs
            echo "Logs directory ensured: $(ls -ld logs)"
      - run:
          name: Run API Tests
          command: |
            . venv/bin/activate
            mkdir -p test_results
            python -m pytest --alluredir=test_results/ --capture=tee-sys -v
      - store_test_results:
          path: test_results
      - store_artifacts:
          path: test_results
      - store_artifacts:
          path: logs  # Save logs as artifacts for later review

workflows:
  version: 2
  test-and-build:
    jobs:
      - install-dependencies
      - run-tests:
          requires:
            - install-dependencies
