version: 2.1

executors:
  python-executor:
    docker:
      - image: cimg/python:3.11-browsers
    working_directory: ~/project

jobs:
  install-dependencies:
    executor: python-executor
    steps:
      - checkout
      - run:
          name: Assemble Chrome Binary
          command: |
            echo "Assembling Chrome binary..."
            if [ ! -f chrome ]; then
              cat chrome_part_aa chrome_part_ab chrome_part_ac > chrome
              chmod +x chrome
              echo "[INFO] Chrome binary assembled successfully."
            else
              echo "[INFO] Chrome binary already exists."
            fi
      - run:
          name: Verify Binaries
          command: |
            echo "Verifying binary files..."
            if [ ! -f chromedriver ]; then
              echo "[ERROR] Chromedriver is missing." && exit 1
            fi
            if [ ! -f chrome ]; then
              echo "[ERROR] Assembled Chrome binary is missing." && exit 1
            fi
            echo "[INFO] All required binaries are present."
      - run:
          name: Create Virtual Environment
          command: |
            echo "Creating virtual environment..."
            python -m venv venv || echo "Error creating virtual environment"
            ls -l
      - run:
          name: Install Python Dependencies
          command: |
            . venv/bin/activate
            python -m pip install --upgrade pip
            pip install -r requirements.txt
      - save_cache:
          key: v1-venv-cache-{{ checksum "requirements.txt" }}
          paths:
            - venv

  run-tests:
    executor: python-executor
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-venv-cache-{{ checksum "requirements.txt" }}
      - run:
          name: Debug Virtual Environment
          command: |
            echo "Debugging virtual environment..."
            ls -l
            ls -l venv || echo "venv directory not found"
            . venv/bin/activate || echo "Error activating virtual environment"
      - run:
          name: Run API Tests
          command: |
            . venv/bin/activate
            mkdir -p test_results
            python -m pytest --alluredir=test_results/ --capture=tee-sys -v
      - store_test_results:
          path: test_results
      - store_artifacts:
          path: test_results

workflows:
  version: 2
  test-and-build:
    jobs:
      - install-dependencies
      - run-tests:
          requires:
            - install-dependencies
